import "demo.rtt";

_·_·_ t1 R t2 := t1 ∘ R ∘ t2˘;

_∗_ t R := t · R · t;

_⊆_ R S := (λx. λy. y) ∗ (R → S);

⊢ subsetId (t : Term) (t' : Term) (x : Term) (y : Term) (R : Rel) (S : Rel)
           (q : t [R ⊆ S] t') : (λx. x) [R → S] (λy. y) := 
  (λx. x) ⇃ 
    pi_right (R → S) (λy. y) t' (λx. λy. y)
      ((λy. y) ⇃ pi_left ((R → S) ∘ (λx. λy. y)˘) t t' (λx. λy. y) 
        (pi_assoc_sym (λx. λy. y) (R → S) (λx. λy. y)˘ t t' q) ⇂ t')
  ⇂ (λy. y);

⊢ idSubset (t : Term) (t' : Term) (x : Term) (y : Term) (R : Rel) (S : Rel)
           (q : (λx. x) [R → S] (λy. y)) : t [R ⊆ S] t' :=
    ( ( ι⟨t,  λx. λy. y⟩ ,                    --  t [λx.λy.y] ((λx.λy.y) t)
        ((λx. λy. y) t) ⇃ q ⇂ (λy. y) ) ,     --  ((λx.λy.y) t) [R→S] (λy.y)  (η‑conversion)
      ((λy. y) ⇃ ∪ᵢ ι⟨t', λx. λy. y⟩ ⇂ t')    --  (λy.y) [(λx.λy.y)˘] t'
    );

⊢ subsetProp (t : Term) (t' : Term) (x : Term) (y : Term) (R : Rel) (S : Rel)
             (p : x [R] y) (q : t [R ⊆ S] t') : x [S] y := 
  x ⇃ (subsetId t t' x y R S q) p ⇂ y;
